
#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 
#
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

	log_format stripsecrets 	'$remote_addr $host - $remote_user [$time_local] '
								'"$secretfilter" $status $body_bytes_sent '
								'$request_length $request_time $upstream_response_time '
								'"$http_referer" "$http_user_agent"';

	map $request $secretfilter {
								~*^(?<prefix1>.*[\?&]api_key=)([^&]*)(?<suffix1>.*)$  "${prefix1}***$suffix1";
								default											$request;
								}

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       				80;
		listen       				443 ssl http2;
        server_name  				adii713.go.ro;
		ssl_certificate      		/usr/local/etc/letsencrypt/live/adii713.go.ro/fullchain.pem;
		ssl_certificate_key  		/usr/local/etc/letsencrypt/live/adii713.go.ro/privkey.pem;
		ssl_trusted_certificate 	/usr/local/etc/letsencrypt/live/adii713.go.ro/chain.pem;
		ssl_session_cache    		shared:SSL:1m;
		ssl_session_timeout  		5m;
		ssl_ciphers  				HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  	on;
		
		set $jellyfin 		192.168.1.14;
		set $lidarr 		192.168.1.18;
		set $radarr 		192.168.1.13;
		set $sonarr 		192.168.1.15;
		set $bazarr 		192.168.1.16;
		set $prowlarr 		192.168.1.12;
		set $jackett 		192.168.1.10;
		set $klipper 		192.168.1.125;
		set $transmission 	192.168.1.11;
		
		location / {
			proxy_pass 					http://192.168.1.14:8096/;
			proxy_set_header 			Host 				$host;
			proxy_set_header 			X-Real-IP 			$remote_addr;
			proxy_set_header 			X-Forwarded-For 	$proxy_add_x_forwarded_for;
			proxy_set_header 			X-Forwarded-Proto 	$scheme;
			proxy_set_header 			Upgrade 			$http_upgrade;
			proxy_set_header 			Connection 			$http_connection;
			proxy_pass_request_headers 	on;
			proxy_buffering 			off;
			access_log 					/usr/local/etc/nginx/log/jellyfin.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/jellyfin-error.log 	error;			
			}

		location /nginx_status {
			return 302 $scheme://$host/nginx_status/;
			}

        location /nginx_status/ {
			stub_status on;
			access_log off;
			}
		
		location /sonarr {
			return 302 $scheme://$host/sonarr/;
			}		

        location /sonarr/ {
            proxy_pass  			http://192.168.1.15:8989/sonarr/;
			proxy_set_header   		Host 				$host;
			proxy_set_header   		X-Forwarded-For 	$proxy_add_x_forwarded_for;
			proxy_set_header   		X-Forwarded-Host 	$host;
			proxy_set_header   		X-Forwarded-Proto 	$scheme;
			proxy_redirect     		off;
			proxy_http_version 		1.1;
			proxy_set_header   		Upgrade 			$http_upgrade;
			proxy_set_header   		Connection 			$http_connection;
			access_log 				/usr/local/etc/nginx/log/sonarr.log 			stripsecrets;
			error_log  				/usr/local/etc/nginx/log/sonarr-error.log 		error;
			}

		location /radarr {
			return 302 $scheme://$host/radarr/;
			}

		location /radarr/ {
			proxy_pass 					http://192.168.1.13:7878/radarr/;
			proxy_set_header 			Host 				$host;
			proxy_set_header 			X-Forwarded-For 	$proxy_add_x_forwarded_for;
			proxy_set_header 			X-Forwarded-Host 	$host;
			proxy_set_header 			X-Forwarded-Proto 	$scheme;
			proxy_redirect 				off;
			proxy_http_version 			1.1;
			proxy_set_header 			Upgrade 			$http_upgrade;
			proxy_set_header 			Connection 			$http_connection;
			access_log 					/usr/local/etc/nginx/log/radarr.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/radarr-error.log 		error;
			}

		location /lidarr {
			return 302 $scheme://$host/lidarr/;
			}

		location /lidarr/ {
			proxy_pass 					http://192.168.1.18:8686/lidarr/;
			proxy_set_header 			Host 				$host;
			proxy_set_header 			X-Forwarded-For 	$proxy_add_x_forwarded_for;
			proxy_set_header 			X-Forwarded-Host 	$host;
			proxy_set_header 			X-Forwarded-Proto 	$scheme;
			proxy_redirect 				off;
			proxy_http_version 			1.1;
			proxy_set_header 			Upgrade 			$http_upgrade;
			proxy_set_header 			Connection 			$http_connection;
			access_log 					/usr/local/etc/nginx/log/lidarr.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/lidarr-error.log 		error;
			}

		location /prowlarr {
			return 302 $scheme://$host/prowlarr/;
			}

        location /prowlarr/ {
            proxy_pass  				http://192.168.1.12:9696/prowlarr/;
			proxy_http_version 			1.1;
			proxy_set_header 			Upgrade 			$http_upgrade;
			proxy_set_header 			Connection 			$http_connection;
			access_log 					/usr/local/etc/nginx/log/prowlarr.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/prowlarr-error.log 	error;
			}

		location /bazarr {
			return 302 $scheme://$host/bazarr/;
			}

        location /bazarr/ {
			proxy_pass              	http://192.168.1.16:6767/bazarr/;
			proxy_set_header        	X-Real-IP               $remote_addr;
			proxy_set_header        	Host                    $http_host;
			proxy_set_header        	X-Forwarded-For         $proxy_add_x_forwarded_for;
			proxy_set_header        	X-Forwarded-Proto       $scheme;
			proxy_http_version      	1.1;
			proxy_set_header        	Upgrade                 $http_upgrade;
			proxy_set_header        	Connection              "Upgrade";
			proxy_redirect 				off;
			access_log 					/usr/local/etc/nginx/log/bazarr.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/bazarr-error.log 		error;
			}

		location /jackett {
			return 302 $scheme://$host/jackett/;
			}

        location /jackett/ {
            proxy_pass  				http://192.168.1.10:9117/jackett/;
			proxy_http_version			1.1;
            proxy_set_header			Upgrade 				$http_upgrade;
            proxy_set_header			Connection 				keep-alive;
            proxy_cache_bypass 			$http_upgrade;
            proxy_set_header   			X-Forwarded-For 		$proxy_add_x_forwarded_for;
            proxy_set_header   			X-Forwarded-Proto 		$scheme;
            proxy_set_header   			X-Forwarded-Host 		$http_host;
			access_log 					/usr/local/etc/nginx/log/jackett.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/jackett-error.log 		error;
			}

		location /klipper {
			return 302 $scheme://$host/klipper/;
			}

        location /klipper/ {
           proxy_pass 					http://192.168.1.125:80/;
			proxy_set_header 			Host 					$host;
			proxy_set_header 			X-Real-IP 				$remote_addr;
			proxy_set_header 			X-Forwarded-For 		$proxy_add_x_forwarded_for;
			proxy_set_header 			X-Forwarded-Proto 		$scheme;
			auth_basic 					"klipper";
			auth_basic_user_file 		/usr/local/etc/nginx/.htpasswd;
			access_log 					/usr/local/etc/nginx/log/klipper.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/klipper-error.log 		error;
			}

		location /klipper/websocket/ {
			proxy_pass 					http://192.168.1.125:80/websocket/;
			proxy_http_version 			1.1;
			proxy_set_header 			Upgrade 				$http_upgrade;
			proxy_set_header 			Connection 				"Upgrade";
			proxy_set_header 			Host 					$host;
			proxy_set_header 			X-Real-IP 				$remote_addr;
			proxy_set_header 			X-Forwarded-For 		$proxy_add_x_forwarded_for;
			proxy_read_timeout 			86400;
			auth_basic 					"klipper";
			auth_basic_user_file 		/usr/local/etc/nginx/.htpasswd;
			access_log 					/usr/local/etc/nginx/log/klipperw.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/klipperw-error.log 	error;
			}

        location /transmission/ {
            proxy_pass  				http://192.168.1.11:9091/transmission/;
			access_log 					/usr/local/etc/nginx/log/transmission.log 			stripsecrets;
			error_log  					/usr/local/etc/nginx/log/transmission-error.log 	error;
			}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
			}
    }
}
